from bot.bot import dp
from aiogram import types
from keyboards.admin.add_group import keyboard

count_admin = 1

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    global count_admin
    if message.chat.type in [types.ChatType.GROUP, types.ChatType.SUPERGROUP]:
        await message.reply("–ö–æ–º–∞–Ω–¥–∞ /start –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ.")
    else:
        await message.answer(
            text=f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <i><b>{message.from_user.first_name} {message.from_user.last_name}</b></i>!\n"
                 f"\n–î–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —á–∞—Ç-–≥—Ä—É–ø–ø—É –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ\n –ª–∏–±–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ."
                 f"\n\nüìå <b><u>–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –º–Ω–µ –≤—Å–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è</u></b> üòâ",
            parse_mode="HTML",
            reply_markup=keyboard
        )

        if not is_user_id_exists(message.from_user.id):
            with open('handlers/user_admin_start.txt', 'a', encoding='utf-8') as file:
                file.write(
                    f"ADMIN \n\t{count_admin}=> User_ID: {message.from_user.id}"
                )
            count_admin += 1


def is_user_id_exists(user_id):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ User ID –≤ —Ñ–∞–π–ª–µ."""
    try:
        with open('handlers/user_admin_start.txt', 'r', encoding='utf-8') as file:
            for line in file:
                if f"User_ID: {user_id}" in line:
                    return True
    except FileNotFoundError:
        return False
    return False
